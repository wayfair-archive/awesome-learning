{"version":3,"sources":["webpack:///./src/constants/propTypes.js","webpack:///./src/templates/category-template.js"],"names":["PropTypes","shape","category","string","isRequired","currentPage","number","prevPagePath","nextPagePath","hasPrevPage","bool","hasNextPage","siteMetadata","siteSubtitle","siteTitle","siteUrl","CategoryTemplate","data","pageContext","path","site","edges","allMarkdownRemark","pageTitle","title","slug"],"mappings":"2FAAA,yBAEsCA,IAAUC,MAAM,CACpDC,SAAUF,IAAUG,OAAOC,WAC3BC,YAAaL,IAAUM,OAAOF,WAC9BG,aAAcP,IAAUG,OAAOC,WAC/BI,aAAcR,IAAUG,OAAOC,WAC/BK,YAAaT,IAAUU,KAAKN,WAC5BO,YAAaX,IAAUU,KAAKN,aAGSJ,IAAUC,MAAM,CACrDW,aAAcZ,IAAUC,MAAM,CAC5BY,aAAcb,IAAUG,OAAOC,WAC/BU,UAAWd,IAAUG,OAAOC,WAC5BW,QAASf,IAAUG,OAAOC,aACzBA,c,kCChBL,8EA2EeY,UAhEU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,KACrCL,EAAaG,EAAKG,KAAKR,aAAvBE,UACAZ,EAAYgB,EAAZhB,SAEAmB,EAASJ,EAAKK,kBAAdD,MACDE,EAAerB,EAAN,MAAoBY,EAEnC,OACE,kBAAC,IAAD,CAAQU,MAAOD,EAAWE,KAAMN,GAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASE,MAAOA,EAAOG,MAAOtB","file":"component---src-templates-category-template-js-b8f742d471c37ded7b48.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const PAGE_CONTEXT_PROP_TYPE = PropTypes.shape({\n  category: PropTypes.string.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  prevPagePath: PropTypes.string.isRequired,\n  nextPagePath: PropTypes.string.isRequired,\n  hasPrevPage: PropTypes.bool.isRequired,\n  hasNextPage: PropTypes.bool.isRequired,\n});\n\nexport const SITE_METADATA_PROP_TYPE = PropTypes.shape({\n  siteMetadata: PropTypes.shape({\n    siteSubtitle: PropTypes.string.isRequired,\n    siteTitle: PropTypes.string.isRequired,\n    siteUrl: PropTypes.string.isRequired,\n  }).isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/shared/Layout';\nimport Courses from '../components/Courses';\nimport Page from '../components/shared/Page';\nimport {\n  PAGE_CONTEXT_PROP_TYPE,\n  SITE_METADATA_PROP_TYPE,\n} from '../constants/propTypes';\n\nconst CategoryTemplate = ({data, pageContext, path}) => {\n  const {siteTitle} = data.site.siteMetadata;\n  const {category} = pageContext;\n\n  const {edges} = data.allMarkdownRemark;\n  const pageTitle = `${category} - ${siteTitle}`;\n\n  return (\n    <Layout title={pageTitle} slug={path}>\n      <Page>\n        <Courses edges={edges} title={category} />\n      </Page>\n    </Layout>\n  );\n};\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array.isRequired,\n    }),\n    site: SITE_METADATA_PROP_TYPE,\n  }).isRequired,\n  pageContext: PAGE_CONTEXT_PROP_TYPE.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport const query = graphql`\n  query CategoryPage(\n    $category: String\n    $coursesLimit: Int!\n    $coursesOffset: Int!\n  ) {\n    site {\n      ...siteMetadataFields\n    }\n    allMarkdownRemark(\n      limit: $coursesLimit\n      skip: $coursesOffset\n      filter: {\n        frontmatter: {\n          category: {eq: $category}\n          template: {eq: \"course\"}\n          draft: {ne: true}\n        }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            categorySlug\n            slug\n          }\n          frontmatter {\n            description\n            category\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n"],"sourceRoot":""}