{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/graph-ql","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/deterministic-mocking-with-graphql-apollo","categorySlug":null},"frontmatter":{"title":"Deterministic Mocking with GraphQL and Apollo","category":null,"description":"Tests are an integral part of the development life cycle, but it isn’t always clear what the most efficient way to write them is. Learn some of the Dos & Don'ts when it comes to testing your React app with Apollo components. We’ll explore: When is a unit test appropriate? When should you lean on integration tests? And how the heck do you dynamically mock GraphQL responses with data specific to your tests? ezCater has solved these problems and is happy to announce its newest edition to the open source community: Lunar, a package to help you mock GraphQL data for your integration tests!\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/fullstack-type-safety","categorySlug":null},"frontmatter":{"title":"Full-stack Type Safety with React, GraphQL, and TypeScript","category":null,"description":"Listen to Robert Zhu talk about TypeScript, GraphQL, and type safety in a React application!\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/lightning-talks-1","categorySlug":null},"frontmatter":{"title":"Lightning Talks - Day 1","category":null,"description":"Featuring Erin Fox: \"Learning React Native as a junior engineer\", Shawn Swyx Wang: \"GraphQL and Babel: Blade\", Christina Keelan Cottrell: \"Conquering Lighthouse: Why the largest part of your app is images\", and Autumn Crossan: \"Unit Testing your React components without wanting to tear your hair out later\"\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/react-and-graphql","categorySlug":null},"frontmatter":{"title":"React & GraphQL – Bringing Simplicity to Client Side Development","category":null,"description":"One of React’s stronger attributes is the component model which allows us to combine behavior and presentation of functional units as opposed to along the arbitrary technology focused separation previously used, but unfortunately had less to say about data needs. With GraphQL we can have an ideal final slide to allow our components to fully encapsulate all of their requirements while keeping things modular and reusable. In this talk we’ll cover both the theory and practice of client development with React and GraphQL, along the way highlighting the areas where we can even more strongly leverage its power and flexibility.\n"}}}]}},"pageContext":{"tag":"GraphQL","currentPage":0,"coursesLimit":10,"coursesOffset":0,"prevPagePath":"/tag/graph-ql","nextPagePath":"/tag/graph-ql/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["784018950"]}