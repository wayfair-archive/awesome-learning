{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/react-boston/page/2","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/large-scale-migrations","categorySlug":null},"frontmatter":{"title":"Large Scale Migrations – Using Recast and jscodeshift to Scale","category":null,"description":"Keeping a tech stack up to date is hard. Keeping it up to date when it has grown to millions of lines of code or thousands of packages and repositories is harder. Leaning on automation helps, but how do you automate code changes? In this talk, Francois goes over the various parsers and code transformation tools such as Babel, TypeScript, Recast and jscodeshift, where they fit in the ecosystem, and how to use them to automate code changes across hundreds of projects to keep your React (or any other) apps in sync with the rest of the world. Attendees will learn about the various ways to work with JavaScript ASTs (there's a lot!) as well as how to orchestrate migrations and pull requests when manual no longer works.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/lightning-talks-1","categorySlug":null},"frontmatter":{"title":"Lightning Talks - Day 1","category":null,"description":"Featuring Erin Fox: \"Learning React Native as a junior engineer\", Shawn Swyx Wang: \"GraphQL and Babel: Blade\", Christina Keelan Cottrell: \"Conquering Lighthouse: Why the largest part of your app is images\", and Autumn Crossan: \"Unit Testing your React components without wanting to tear your hair out later\"\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/lightning-talks-2","categorySlug":null},"frontmatter":{"title":"Lightning Talks - Day 2","category":null,"description":"Featuring Josh Pollock: \"React-powered future at WordPress\", Andrew Kaiser: \"Easter Eggs in the Source\", Cole Turner: \"Render Less: Create Performant Layouts\", and Jason Clark: \"Component Libraries\"\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/progressive-react","categorySlug":null},"frontmatter":{"title":"Progressive React","category":null,"description":"Listen to Houssein Djirdeh discuss Progressive React at React Boston 2018!\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/react-and-graphql","categorySlug":null},"frontmatter":{"title":"React & GraphQL – Bringing Simplicity to Client Side Development","category":null,"description":"One of React’s stronger attributes is the component model which allows us to combine behavior and presentation of functional units as opposed to along the arbitrary technology focused separation previously used, but unfortunately had less to say about data needs. With GraphQL we can have an ideal final slide to allow our components to fully encapsulate all of their requirements while keeping things modular and reusable. In this talk we’ll cover both the theory and practice of client development with React and GraphQL, along the way highlighting the areas where we can even more strongly leverage its power and flexibility.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/react-and-elm","categorySlug":null},"frontmatter":{"title":"React and Elm Join Forces","category":null,"description":"The differences between Elm and React with Redux are often framed as a competition, but it doesn’t have to be that way. Coming to React as an experienced Elm developer, I’ll explore what the two share in order to help you better understand the design patterns behind both. I will talk about the problems that the Elm and Redux architectures solve.\n\nI will then outline how Elm's flow compares to Redux's unidirectional data flow, and describe the pros and cons I've seen different teams I've been on encounter when using Elm or React. I will also show how similar reducers in Redux are to Elm update functions, by doing a side-by-side comparison of the same component, built in both React with Redux and in Elm.\n\nFinally, handling synchronous events is built in to React, but there is no one way to handle side effects. I'll give an overview of the main options for React - thunks, sagas, and observables - and will introduce the audience to redux-loop, which borrows from Elm's commands. After this talk, you should have a better understanding of the choices behind the React-Redux and Elm architectures.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/react-grpc","categorySlug":null},"frontmatter":{"title":"React with gRPC","category":null,"description":"The subject explored in this talk is using gRPC-Web with React. gRPC was released by Google a few years back and since then there has been a lot of effort towards getting the industry to consider this as the glue for micro-services communication. It is built on HTTP/2, which provides us with a high-speed communication protocol. The data transferred is in a binary format and, hence, is lighter than JSON/XML payloads. This can make a big difference when latency is an issue. gRPC-Web provides a Javascript library that lets browser clients access a gRPC service. gRPC-Web clients connect to gRPC services via a special gateway proxy: the current version of the library uses Envoy by default, in which gRPC-Web support is built-in. React does not offer official support for gRPC-web yet but it is possible to integrate the two. The presentation talks about gRPC and its integration with React for utilizing the benefits that gRPC offers and circumventing the flaws of HTTP and REST.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/react-romance","categorySlug":null},"frontmatter":{"title":"React – A Romance of Many Dimensions","category":null,"description":"Is VR an approachable medium for JavaScript developers? Can we, as front-end developers, use what we already know to build a 3D world? Can we use React to reach the 4th dimension? Yes! React360 is here to let us create delightful VR experiences in the browser.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/realtime-app-development","categorySlug":null},"frontmatter":{"title":"Realtime App Development by Integrating Web Frameworks","category":null,"description":"Have you ever wondered how real time score or weather information update happens? \n\nIn this lightning talk, let us explore how integrating React or Express.js and a reactive Meteor framework based on Distributed Data Protocol (DDP) establishes real-time data communication using web sockets.\n\nData exchange between the two servers is facilitated by a MongoDB database. Simple smart home dashboard application will be demoed to illustrate this process.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/reasonml","categorySlug":null},"frontmatter":{"title":"ReasonML","category":null,"description":"Watch the keynote talk for React Boston 2018 on ReasonML, presented by Ken Wheeler!\n"}}}]}},"pageContext":{"tag":"React Boston","currentPage":2,"coursesLimit":10,"coursesOffset":20,"prevPagePath":"/tag/react-boston/page/1","nextPagePath":"/tag/react-boston/page/3","hasPrevPage":true,"hasNextPage":true}},"staticQueryHashes":["784018950"]}