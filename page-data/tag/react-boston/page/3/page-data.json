{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/react-boston/page/3","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/internationalization","categorySlug":null},"frontmatter":{"title":"Sacré Bleu! The Trials of Internationalising Your ẨṔṔŁîÇåŤḯṏÑ�","category":null,"description":"When I started working at my company, all our translations sat in static JSON files. Manually adding new translations was tedious and error-prone, every language loaded on every page, and new translations rarely made it in the same release as their accompanying feature work. This talk will discuss how we transitioned to using react-i18next to localize our app, the problems we had along the way and how we solved them, and tips for designing applications to minimize future localization problems.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/saving-the-web","categorySlug":null},"frontmatter":{"title":"Saving the Web 16 Milliseconds at a Time","category":null,"description":"When we talk about performance, we generally focus on the initial load experience - the ephemeral period between entering a URL in the address bar and being able to see/interact with the page. That stuff's important, but there's more to this enchilada!\n\nThis talk focuses on animation performance. We'll dig into why accordions are almost always implemented wrong, dust off some long-forgotten tricks to run just about any animation at 60fps, and explore the bleeding-edge APIs that can help us in this mission.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/layouts-in-the-component-era","categorySlug":null},"frontmatter":{"title":"Say Hello to Box, Flex and Stack - Layouts in the Component Era","category":null,"description":"CSS is a great language and has improved a lot in the past decade but it still has the same global nature as in its early days. CSS was designed to style documents, and that often causes issues in large scale applications. Naming conventions, like BEM, CSS Modules and later CSS in JS significantly improved the maintainability of styles, but we can go one step further. Using components to create responsive Flexbox and Grid layouts can simplify code, improve developer experience and it feels natural in React.\n\nIn this talk we’ll explore how to create any kind of page layout with just three generic components: Box, Flex and Stack.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/streaming-react","categorySlug":null},"frontmatter":{"title":"Streaming React for Faster UIs","category":null,"description":"The talk aims to shed some light on two things: a) React DOM's stream renderer that allows React components to be rendered to streams on the server and piped to a browser's response, and b) Browsers' added support for streams that harness their streaming HTML parsers. The way these technologies combine allow the creation of performant, powerful web applications with impressive time-to-interactive metrics.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/humanizing-pull-requests","categorySlug":null},"frontmatter":{"title":"The Art of Humanizing Pull Requests","category":null,"description":"Code reviews are an important part of a developer’s life. It’s very easy to perform code reviews, but hard to do it with empathy. In today’s online world, online criticism can be misinterpreted easily. Hence in this talk, we will go through what is a pull request, how to effectively create one, how to give constructive feedback and also how to respond to one using empathy.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/whimsy","categorySlug":null},"frontmatter":{"title":"The Case for Whimsy","category":null,"description":"I wish the internet was more fun. The web is an incredible platform, and can do incredible things. This talk looks at novel, quirky, whimsical animations and interactions that make our products better and more enjoyable to use. For example, at Khan Academy, we fill the user’s screen with confetti rain when they get 100% correct on an exercise. I’ll talk about how we drew on 2D physics to make the confetti feel real. Make no mistake; while this talk straddles the line between engineering and UX design, this is very much a React talk. We'll look at how to abstract motion and whimsical behavior into reusable components, how to fold up the DOM like origami, and how to do SVG/canvas animation in a React-friendly way.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2018/state-of-redux","categorySlug":null},"frontmatter":{"title":"The State of Redux","category":null,"description":"Watch Mark Erikson talk about the state of Redux at React Boston 2018!\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/rtl","categorySlug":null},"frontmatter":{"title":"Using React Testing Library to Write Stronger Tests","category":null,"description":"If you had to rewrite your tests when writing a hook in your React application, then you're writing tests wrong.\n\nreact-testing-library is what it sounds like, but more importantly, it encourages writing tests in the way that your end users will be using your components.\n\nIn this talk, I will first introduce react-testing-library, what it is, what it encourages, and what it does best. I'll then dive into how to effectively test a react component, first a smaller component, then a \"larger\" component with redux, i18n dependencies, etc., then I will show all of the different APIs that react-testing-library provides, and how to effectively use them. Then, I'll show how to write effective tests across an entire application (writing reusable, effective tests that are not brittle).\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/visual-ui-testing","categorySlug":null},"frontmatter":{"title":"Visual UI Testing – Testing the Last Mile","category":null,"description":"Some things can't be easily tested with unit tests and integration tests, and so far too frequently we rely on manual QA to verify visual changes to our applications. With a proliferation of device sizes and browser versions, spot checking changes in the browser is not possible at scale. In this talk, Craig Cavalier explores how visual ui testing can close the testing gap and restore confidence in our ability to make UI changes that work cross-browser.\n"}}},{"node":{"fields":{"slug":"/tech-talks/react-boston-2019/pwa","categorySlug":null},"frontmatter":{"title":"Why You Should Make All of Your React Apps PWAs and How","category":null,"description":"Developers are usually familiar with the phrase, progressive web app (PWA), but aren't 100% sure of what it is. Most would be surprised to know that they are about 50% of the way there with most of their applications just through best practices. Once you have a checklist for creating PWAs, you'll be able to take any web application and apply it regardless of the framework you use.\n\nReact in particular makes it incredibly easy to create PWAs or to update your current React apps and make them PWAs. In this talk, we'll cover the 8 necessary attributes of a PWA, some of the advanced PWA attributes, and how to create/update React apps to make them PWAs. By the end of this talk, attendees should have a concrete understanding of what a PWA is and how to make one with React.\n"}}}]}},"pageContext":{"tag":"React Boston","currentPage":3,"coursesLimit":10,"coursesOffset":30,"prevPagePath":"/tag/react-boston/page/2","nextPagePath":"/tag/react-boston/page/4","hasPrevPage":true,"hasNextPage":true}},"staticQueryHashes":["784018950"]}