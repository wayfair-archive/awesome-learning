{"componentChunkName":"component---src-templates-quiz-template-js","path":"/courses/React-Hooks/intro-to-react-hooks/quiz","result":{"data":{"markdownRemark":{"id":"5a50dbb0-f8d1-5965-9b8b-193ac3264e5b","html":"","fields":{"slug":"/courses/React-Hooks/intro-to-react-hooks","tagSlugs":["/tag/react/"]},"frontmatter":{"title":"Intro to React Hooks","preReadQuiz":{"description":"Take this quiz to test your understanding of React Hooks!","questions":[{"codeSnippet":null,"correctChoices":[1,3],"description":"Which of the following scenarios describe a correct usage of the useState Hook? Check all that apply.","explanation":"One of the core rules of React Hooks is that they should be called the same number of times between renders of a component. If a hook needs to not apply its logic if some condition is true or false, that logic should live within the hook itself (and not above it.) Class Components are not compatible with Hooks, and will cause a runtime error.","type":"checkbox","choices":[{"value":"Calling useState from within a Class Component"},{"value":"Calling useState from within a Function Component"},{"value":"Calling useState from within an if/else statement"},{"value":"Calling useContext from within useState"},{"value":"Calling useState from within a forEach statement on an array whose length can change"}]},{"codeSnippet":"import React, {useState} from 'react';\n\n// ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è Snippets begin ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n// 1.\nconst count, setCount = useState();\n\n// 2. \nconst [count, setCount] = useState();\n\n// 3. \nconst setCount = useState(0);\n\n// 4.\nconst [count, setCount] = useState(0);\n\n// 5.\nimport {count, setCount} from useState();\n// ‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è Snippets end ‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è\n\n// üí° Choose the correct code snippet that allows \n// üí° the below React to work correctly!\n\nfunction handleButtonClick() {\n  const newCount = count + 1;\n  setCount(newCount);\n}\nreturn (\n  <section>\n    <h1>The count is {count}</h1>\n    <button onClick={handleButtonClick}>\n      Click me!\n    </button>\n  </section>\n);\n","correctChoices":[3],"description":"Which of the following snippets of code represent a valid implementation of useState that allows the button to function?","explanation":"Snippet 1 will result in a JavaScript syntax error. Snippet 2, while not incorrect, does not provide an initial value to 'useState', which will produce an initial value of 'count' as 'undefined'. When trying to increment the value in 'handleButtonClick', incrementing 'count' by one will return 'NaN'. Snippet 3 is missing an array destructuring statement, and Snippet 5 attempts to import the functionality of useState as if it could be imported, when instead it must be array-destructured. \n","type":"radio","choices":[{"value":"Snippet 1"},{"value":"Snippet 2"},{"value":"Snippet 3"},{"value":"Snippet 4"},{"value":"Snippet 5"}]},{"codeSnippet":null,"correctChoices":[1],"description":"True or False - You can update state (with a function returned from useState) within a useEffect hook.","explanation":"You can do this, but remember to specify values in the second argument to useEffect. The hook will then only run when any value in the second argument changes. If you don't, you will enter into an infinite loop (as changing the state triggers a re-render, which calls the useEffect hook.)","type":"radio","choices":[{"value":"True"},{"value":"False"}]},{"codeSnippet":null,"correctChoices":[2,4],"description":"When you return a function from within a useEffect call, when does this function get executed?","explanation":"The function returned by useEffect is executed when the component unmounts, and when it is re-rendered due to a change in dependencies.","type":"checkbox","choices":[{"value":"When the component mounts"},{"value":"When the component's children are mounted"},{"value":"When the component unmounts"},{"value":"When the component throws an error"},{"value":"When a value in useEffect's dependency array changes"}]}]}}}},"pageContext":{"slug":"/courses/React-Hooks/intro-to-react-hooks"}},"staticQueryHashes":["784018950"]}