{"componentChunkName":"component---src-templates-lesson-template-js","path":"/courses/Functional-Programming/immutability","result":{"data":{"markdownRemark":{"id":"ab42e837-b27e-5ce3-92eb-4798801418f7","html":"","fields":{"slug":"/courses/Functional-Programming/immutability","tagSlugs":["/tag/usability/","/tag/maintainability/","/tag/functional-programming/","/tag/immutability/"]},"frontmatter":{"description":"The first lesson of the Awesome Learning Functional Programming course will teach students how to apply the concept of immutability (the idea that something cannot be modified after being instantiated) to your code and how to avoid common pitfalls in JavaScript.\n","course":"Functional-Programming","tags":["Usability","Maintainability","Functional Programming","Immutability"],"title":"Immutability","timeToCompletion":"~40 minutes","videoLinks":["https://www.youtube.com/embed/QGOVMn-Geec","https://www.youtube.com/embed/c9pw8IBtCHw"],"preReadQuizLink":null,"defaultTab":null,"readingLinks":[{"link":"https://www.freecodecamp.org/news/write-safer-and-cleaner-code-by-leveraging-the-power-of-immutability-7862df04b7b6/","description":"5 minute read. General introduction to immutability.","title":"Write safer and cleaner code by leveraging the power of “Immutability”"},{"link":"https://elizarov.medium.com/immutability-we-can-afford-10c0dcb8351d","description":"6 minute read. A deeper reflection on the argument for immutability.","title":"Immutability we can afford"}],"secondaryExerciseUrl":"https://docs.google.com/forms/d/e/1FAIpQLSf8TWIhIlzga1CjBQmiOkKkfrro3NNHPnFNU9LCkYovZu2QQg/viewform?usp=sf_link","preReadQuiz":null}}},"pageContext":{"slug":"/courses/Functional-Programming/immutability"}},"staticQueryHashes":["3796714061","784018950"]}