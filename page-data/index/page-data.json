{"componentChunkName":"component---src-templates-index-template-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/courses/Accessibility/","categorySlug":"/category/accessibility/"},"frontmatter":{"title":"Accessibility","category":"Accessibility","description":"Accessibility refers to how people with disabilities can meaningfully use products, websites, and services in the same (or as close to similar as possible) manner as people without disabilities. When engineers create pages, features, and interaction-heavy interfaces for the web, they are often geared towards people who use a traditional keyboard, mouse, and monitor. This course introduces engineers to how they can create more accessible and usable products."}}},{"node":{"fields":{"slug":"/courses/CSS-Layouts/","categorySlug":"/category/css-fundamentals/"},"frontmatter":{"title":"CSS Layouts","category":"CSS Fundamentals","description":"Need help achieving the ideal layout for your feature? This course explains the various CSS layout modes and covers everything you need to create robust responsive webpages for all devices and sizes."}}},{"node":{"fields":{"slug":"/courses/Data-Types/","categorySlug":"/category/js-fundamentals/"},"frontmatter":{"title":"Data Types","category":"JS Fundamentals","description":"The focus of this course is to make you familiar with the nuance of the JavaScript Data Types. A little hazy on passing objects by reference? Not sure why your number is coercing to a string? Not sure what coercion is? Then this is the topic for you. Feel at home with the data types and how to make them do what you want by the end of this course"}}},{"node":{"fields":{"slug":"/courses/Functional-Programming/","categorySlug":"/category/functional-programming/"},"frontmatter":{"title":"Functional Programming","category":"Functional Programming","description":"Functional programming is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects. Functional programming is declarative rather than imperative, and application state flows through pure functions. Contrast with object oriented programming, where application state is usually shared and colocated with methods in objects. This course introduces engineers to some of the base-level concepts of functional programming."}}},{"node":{"fields":{"slug":"/courses/Functions-and-Scope/","categorySlug":"/category/js-fundamentals/"},"frontmatter":{"title":"Functions and Scope","category":"JS Fundamentals","description":"If you want to learn about JavaScript functions, then this is the course for you. Did you know that everything is a function? No? How about binding functions to Objects? Closures? Learn the digestible rules of arrow functions and when to use them best. What the heck is a this anyway? Become familiar with scope and context in JavaScript and use them to your advantage. By the end of this course, you will become familiar with all of these topics and more."}}},{"node":{"fields":{"slug":"/courses/React-Hooks/","categorySlug":"/category/js-fundamentals/"},"frontmatter":{"title":"React Hooks","category":"JS Fundamentals","description":"React Hooks introduce new ways to use React's APIs and features, while writing less code to do so! But what's the big deal? Why should you care about Hooks? Do you need to refactor all your old code? And why do I see so many people sharing hooks online? This course will introduce engineers to React Hooks, the differences between writing Class Components and Hooked Components, and some common patterns in writing components with Hooks."}}},{"node":{"fields":{"slug":"/courses/Promises/","categorySlug":"/category/async-js/"},"frontmatter":{"title":"Promises","category":"Async JS","description":"Asynchronous programming patterns are the cornerstone of Frontend. All of the interactive interfaces we build on the web would not be possible without the asynchronous features of JavaScript. This course will teach you the crucial nuance when utilizing these patterns and will heavily focus on Promises"}}},{"node":{"fields":{"slug":"/courses/SOLID/","categorySlug":"/category/object-oriented-design/"},"frontmatter":{"title":"SOLID Principles","category":"Object-Oriented Design","description":"Familiarize yourself with the SOLID Design Principles and put them into practice. In the first lesson, walk through a conversational multiple-choice \"quiz\" (great for absolute beginners), and in the second, rewrite principle-violating code in line with the principles. This course assumes you have basic familiarity with Java, though by no means an expert understanding."}}},{"node":{"fields":{"slug":"/courses/TypeScript-Basics/","categorySlug":"/category/type-script/"},"frontmatter":{"title":"TypeScript Basics","category":"TypeScript","description":"This is an introduction to TypeScript for developers who are familiar with JavaScript. In the first lesson, take a look at the differences between the two and how typing your code can decrease the amount of possible inputs to your functions and help you catch bugs before they happen."}}},{"node":{"fields":{"slug":"/courses/Array-Methods/","categorySlug":"/category/js-fundamentals/"},"frontmatter":{"title":"Array Methods","category":"JS Fundamentals","description":"Welcome to the Awesome Learning Array Methods course. Over the next 5 lessons, you will deep dive into the 4 most commonly used array methods."}}}]}},"pageContext":{"coursesLimit":10,"coursesOffset":0}},"staticQueryHashes":["784018950"]}