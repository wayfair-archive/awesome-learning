{"componentChunkName":"component---src-templates-category-template-js","path":"/category/functional-programming","result":{"data":{"site":{"siteMetadata":{"siteSubtitle":"Learning frontend, together.","siteUrl":"https://wayfair.github.io/awesome-learning","siteTitle":"Awesome Learning"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"categorySlug":"/category/functional-programming/","slug":"/courses/Functional-Programming/"},"frontmatter":{"description":"Functional programming is the process of building software by composing pure functions, avoiding shared state, mutable data, and side-effects. Functional programming is declarative rather than imperative, and application state flows through pure functions. Contrast with object oriented programming, where application state is usually shared and colocated with methods in objects. This course introduces engineers to some of the base-level concepts of functional programming.","category":"Functional Programming","title":"Functional Programming"}}}]}},"pageContext":{"category":"Functional Programming","currentPage":0,"coursesLimit":10,"coursesOffset":0,"prevPagePath":"/category/functional-programming","nextPagePath":"//category/functional-programming/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["784018950"]}