{"componentChunkName":"component---src-templates-tech-talk-template-js","path":"/tech-talks/react-boston-2019/react-grpc","result":{"data":{"markdownRemark":{"id":"478365a7-9187-5dc8-b82a-2f8d619659a6","html":"","fields":{"slug":"/tech-talks/react-boston-2019/react-grpc","tagSlugs":["/tag/react/","/tag/react-boston/","/tag/grpc/","/tag/api-design/"]},"frontmatter":{"description":"The subject explored in this talk is using gRPC-Web with React. gRPC was released by Google a few years back and since then there has been a lot of effort towards getting the industry to consider this as the glue for micro-services communication. It is built on HTTP/2, which provides us with a high-speed communication protocol. The data transferred is in a binary format and, hence, is lighter than JSON/XML payloads. This can make a big difference when latency is an issue. gRPC-Web provides a Javascript library that lets browser clients access a gRPC service. gRPC-Web clients connect to gRPC services via a special gateway proxy: the current version of the library uses Envoy by default, in which gRPC-Web support is built-in. React does not offer official support for gRPC-web yet but it is possible to integrate the two. The presentation talks about gRPC and its integration with React for utilizing the benefits that gRPC offers and circumventing the flaws of HTTP and REST.\n","date":"September 22, 2019","embedLink":"https://www.youtube.com/embed/h4zUtcEfMoE","group":"react-boston-2019","tags":["React","React Boston","GRPC","API design"],"title":"React with gRPC","slides":null,"speakers":[{"name":"Disha Sule","title":"Optimus Ride","twitter":null}]}}},"pageContext":{"slug":"/tech-talks/react-boston-2019/react-grpc"}},"staticQueryHashes":["784018950"]}