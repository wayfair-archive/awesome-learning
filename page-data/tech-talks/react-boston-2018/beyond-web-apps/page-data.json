{"componentChunkName":"component---src-templates-tech-talk-template-js","path":"/tech-talks/react-boston-2018/beyond-web-apps","result":{"data":{"markdownRemark":{"id":"19a1d90d-3ef9-52fa-aa2f-67d57c44ed58","html":"","fields":{"slug":"/tech-talks/react-boston-2018/beyond-web-apps","tagSlugs":["/tag/react/","/tag/react-boston/","/tag/react-native/","/tag/app-development/","/tag/web-assembly/","/tag/c/"]},"frontmatter":{"description":"Can we create or port an existing native desktop application to a complete \"React powered\" web-app matching (or even exceeding) the quality of the legacy desktop app? Sounds like a good challenge! And this is what I decided to do with my game-making software. This talk will explain all the problems I had and solutions that I used to port my native app written in C++, to a full React + WebAssembly app - while still keeping all existing features! Spoiler alert: At the end, it works.\n","date":"September 30, 2018","embedLink":"https://www.youtube.com/embed/EdTLGUU4r-k","group":"react-boston-2018","tags":["React","React Boston","React Native","App development","WebAssembly","C++"],"title":"Beyond Web-Apps â€“ React, JavaScript to Port Legacy Native Apps","slides":null,"speakers":[{"name":"Florian Rival","title":"Google","twitter":null}]}}},"pageContext":{"slug":"/tech-talks/react-boston-2018/beyond-web-apps"}},"staticQueryHashes":["784018950"]}