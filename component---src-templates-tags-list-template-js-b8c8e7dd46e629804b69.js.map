{"version":3,"sources":["webpack:///./src/templates/tags-list-template.js"],"names":["TagsListTemplate","data","path","theme","useTheme","group","allMarkdownRemark","title","slug","m","maxWidth","breakpoints","values","lg","variant","color","map","tag","display","key","fieldValue","pt","component","Link","to","kebabCase","role","totalCount"],"mappings":"4FAAA,yIA2DeA,UAlDU,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,KACzBC,EAAQC,cACPC,EAASJ,EAAKK,kBAAdD,MAEP,OACE,kBAAC,IAAD,CAAQE,MAAO,OAAQC,KAAMN,GAC3B,kBAAC,IAAD,CAAMK,MAAM,QACV,kBAAC,IAAD,CAAKE,EAAE,OAAOC,SAAUP,EAAMQ,YAAYC,OAAOC,IAC/C,kBAAC,IAAD,CAAYC,QAAQ,KAAKC,MAAM,eAA/B,YAGCV,EAAMW,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAKC,QAAQ,QAAQC,IAAKF,EAAIG,WAAYC,GAAI,GAC5C,kBAAC,IAAD,CACEC,UAAWC,OACXC,GAAE,QAAUC,IAAUR,EAAIG,YAAxB,IACFM,KAAK,QAEJT,EAAIG,WALP,KAKqBH,EAAIU,WALzB","file":"component---src-templates-tags-list-template-js-b8c8e7dd46e629804b69.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {graphql, Link} from 'gatsby';\nimport kebabCase from 'lodash/kebabCase';\nimport {Typography, Box, Button} from '@material-ui/core';\nimport {useTheme} from '@material-ui/core/styles';\nimport Layout from '../components/shared/Layout';\nimport Page from '../components/shared/Page';\n\nconst TagsListTemplate = ({data, path}) => {\n  const theme = useTheme();\n  const {group} = data.allMarkdownRemark;\n\n  return (\n    <Layout title={'Tags'} slug={path}>\n      <Page title=\"Tags\">\n        <Box m=\"auto\" maxWidth={theme.breakpoints.values.lg}>\n          <Typography variant=\"h1\" color=\"textPrimary\">\n            All Tags\n          </Typography>\n          {group.map((tag) => (\n            <Box display=\"block\" key={tag.fieldValue} pt={2}>\n              <Button\n                component={Link}\n                to={`/tag/${kebabCase(tag.fieldValue)}/`}\n                role=\"link\"\n              >\n                {tag.fieldValue} ({tag.totalCount})\n              </Button>\n            </Box>\n          ))}\n        </Box>\n      </Page>\n    </Layout>\n  );\n};\n\nTagsListTemplate.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.array,\n    }),\n  }).isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport const query = graphql`\n  query TagsListQuery {\n    allMarkdownRemark(\n      filter: {frontmatter: {template: {eq: \"course\"}, draft: {ne: true}}}\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default TagsListTemplate;\n"],"sourceRoot":""}