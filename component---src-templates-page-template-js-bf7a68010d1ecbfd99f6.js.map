{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./src/components/shared/Page/Page.js","webpack:///./src/constants/propTypes.js"],"names":["PageTemplate","data","site","siteMetadata","siteTitle","title","siteSubtitle","subtitle","markdownRemark","frontmatter","pageTitle","pageDescription","description","pageBody","html","metaDescription","dangerouslySetInnerHTML","__html","Page","children","className","defaultProps","PropTypes","shape","category","string","isRequired","currentPage","number","prevPagePath","nextPagePath","hasPrevPage","bool","hasNextPage","siteUrl"],"mappings":"8FAAA,kEAuEeA,UAhEM,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACoBA,EAAKC,KAAKC,aAA/CC,EADiB,EACxBC,MAA4BC,EADJ,EACNC,SADM,EAM3BN,EAAKO,eAAeC,YAFfC,EAJsB,EAI7BL,MACaM,EALgB,EAK7BC,YAGWC,EAAYZ,EAAKO,eAAvBM,KAEDC,EACgB,OAApBJ,EAA2BA,EAAkBL,EAE/C,OACE,kBAAC,IAAD,CAAQD,MAAUK,EAAL,MAAoBN,EAAaQ,YAAaG,GACzD,kBAAC,IAAD,CAAMV,MAAOK,GACX,yBAAKM,wBAAyB,CAACC,OAAQJ,S,6FCnBzCK,G,UAAO,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACX,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,aAAaD,OASlCD,EAAKG,aAAe,CAClBF,SAAU,MAGGD,S,kCCpBf,yBAEsCI,IAAUC,MAAM,CACpDC,SAAUF,IAAUG,OAAOC,WAC3BC,YAAaL,IAAUM,OAAOF,WAC9BG,aAAcP,IAAUG,OAAOC,WAC/BI,aAAcR,IAAUG,OAAOC,WAC/BK,YAAaT,IAAUU,KAAKN,WAC5BO,YAAaX,IAAUU,KAAKN,aAGSJ,IAAUC,MAAM,CACrDpB,aAAcmB,IAAUC,MAAM,CAC5BjB,aAAcgB,IAAUG,OAAOC,WAC/BtB,UAAWkB,IAAUG,OAAOC,WAC5BQ,QAASZ,IAAUG,OAAOC,aACzBA,c","file":"component---src-templates-page-template-js-bf7a68010d1ecbfd99f6.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/shared/Layout';\nimport Page from '../components/shared/Page';\nimport {SITE_METADATA_PROP_TYPE} from '../constants/propTypes';\n\nconst PageTemplate = ({data}) => {\n  const {title: siteTitle, subtitle: siteSubtitle} = data.site.siteMetadata;\n\n  const {\n    title: pageTitle,\n    description: pageDescription,\n  } = data.markdownRemark.frontmatter;\n\n  const {html: pageBody} = data.markdownRemark;\n\n  const metaDescription =\n    pageDescription !== null ? pageDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${pageTitle} - ${siteTitle}`} description={metaDescription}>\n      <Page title={pageTitle}>\n        <div dangerouslySetInnerHTML={{__html: pageBody}} />\n      </Page>\n    </Layout>\n  );\n};\n\nPageTemplate.propTypes = {\n  data: PropTypes.shape({\n    site: SITE_METADATA_PROP_TYPE.isRequired,\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        description: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport const query = graphql`\n  query PageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      html\n      frontmatter {\n        title\n\n        description\n      }\n    }\n  }\n`;\n\nexport const siteMetadataFieldsFragment = graphql`\n  fragment siteMetadataFields on Site {\n    siteMetadata {\n      siteSubtitle: subtitle\n      siteUrl: url\n      siteTitle: title\n    }\n  }\n`;\n\nexport default PageTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Page.scss';\n\nconst Page = ({children}) => (\n  <div className=\"Page\">\n    <div className=\"Page-inner\">\n      <div className=\"Page-body\">{children}</div>\n    </div>\n  </div>\n);\n\nPage.propTypes = {\n  children: PropTypes.node,\n};\n\nPage.defaultProps = {\n  children: null,\n};\n\nexport default Page;\n","import PropTypes from 'prop-types';\n\nexport const PAGE_CONTEXT_PROP_TYPE = PropTypes.shape({\n  category: PropTypes.string.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  prevPagePath: PropTypes.string.isRequired,\n  nextPagePath: PropTypes.string.isRequired,\n  hasPrevPage: PropTypes.bool.isRequired,\n  hasNextPage: PropTypes.bool.isRequired,\n});\n\nexport const SITE_METADATA_PROP_TYPE = PropTypes.shape({\n  siteMetadata: PropTypes.shape({\n    siteSubtitle: PropTypes.string.isRequired,\n    siteTitle: PropTypes.string.isRequired,\n    siteUrl: PropTypes.string.isRequired,\n  }).isRequired,\n});\n"],"sourceRoot":""}